1.函数关键字
  def
2.函数的定义
   def greet_user(username):
      """显示简单的问候语"""
      print("Hello, " + username.title() + "!")
   greet_user('jesse')

   =>Hello, Jesse!
   
   上面函数中，形参：username  实参：'jesse'

   空函数：def nop():
              pass
3.函数参数与作用
  实参类别：
     位置实参：按照参数顺序传入函数
     关键字实参：指定关键字（形参）的方式传入函数 
  默认值：可以给形参指定默认值

4.函数返回值
  return 可以为多个返回值

5.file
  打开文件方式（读写两种方式）
    1).第二个参数：w -> 写    r -> 读    a -> 附加模式
    2).例子：
    filename = 'programming.txt'
    with open(filename, 'w') as file_object:
      file_object.write("I love programming.")
  文件对象的操作方法
       file_object.write(） #写入
       file_object.read(）  #读取
       file_object.close()  #关闭
  学习对excel及csv文件进行操作
    1)读CSV   import csv
        import csv#导入模块
        #打开csv文件
        with open("E:/Users/DELL/PycharmProjects/untitled1/销售相关企业信息.csv","r") as csvfile:#r代表read
        #读取文件
        read = csv.reader(csvfile)
        # print(read)
        for i in read:#使用遍历的方式来读取文件
            print(i)
    2)写CSV   import csv
        with open('./csvtest.csv','w')as csvfile:#这里的w代表write写入
            writer = csv.writer(csvfile)
            writer.writerow(['id','url','keywords'])
            data = [
                ('1','http://www.xiaoheiseo.com/','小黑'),
                ('2','http://www.baidu.com/','百度'),
                ('3','http://www.jd.com/','京东')

            ]
            writer.writerows(data)#多行写入时为writerows 加s
    3)利用 xlrd 模块操作 Excel
        import xlrd # 导入xlrd模块
        # 读取本地csv文件,打开excel文件（默认是rb方式打开）
        myWorkbook = xlrd.open_workbook('./某公司贸易数据.xlsx')
        # 获取excel工作表
        mySheets = myWorkbook.sheets()  # 获取工作表
        mySheet = mySheets[0]  # 通过索引获取
        mySheet = myWorkbook.sheet_by_index(1) #通过索引顺序获得
        mySheet = myWorkbook.sheet_by_name('产品类别')  #通过名字获取
        # 获取行数和列数
        nrows = mySheet.nrows
        ncols = mySheet.ncols
        print("The rows: %d" % nrows)#获取行数nrows
        print("The cols: %d" % ncols)#获取列数ncols
        # 获取一行和一列
        for i in range(nrows):
            myRowValues = mySheet.row_values(i)
            print(myRowValues)
        for j in range(ncols):
            myColValues = mySheet.col_values(j)
            print(myColValues)
        # 读取单元格数据 
        for i in range(nrows):
            for j in range(ncols):
                mycell = mySheet.cell(i, j)#获取单元格，i是行数，j是列数，行数和列数都是从0开始计数
                mycellvalue = mycell.value #通过单元格获取单元格数据 
                print(mycellvalue)
        mycellvalue = mySheet.cell_value(0, 0)#根据行和列的索引获取单元格数据
        #mySheet.cell_value(0, 0) = “newValues”# 改变i，j值则改变单元格 (注意: xlrd是只读的,不能修改)
        print(mycellvalue)
    4)利用 xlwt 模块 写入excel文件
        import xlwt   # 导入xlwt模块
        wbk = xlwt.Workbook() # 创建工作簿
        sheet = wbk.add_sheet(‘表01’) # 创建工作表
        sheet.write(0,1,'test text’) # 在一列二行写入信息
        wbk.save(‘./excel/test.xls’) # 保存 Excel 文件
        print("ok") 
     5)xlutils结合xlrd操作Excel
        import xlrd
        from xlutils.copy import copy
        workbook = xlrd.open_workbook('./某公司贸易数据.xlsx')
        new_workbook = copy(workbook)#拷贝一份工作簿
        ws = new_workbook.get_sheet(0)#获取第一张工作簿
        ws.write(3,0,'这是修改的')#根据索引修改对应的单元格数据
        new_workbook.save('./rongda.xls')
      6)利用openpyxl操作Excel
        #openpyxl对excel文件进行读写操作
        from openpyxl import Workbook 
        from openpyxl import load_workbook 
        from openpyxl.writer.excel import ExcelWriter 
        workbook_ = load_workbook("./excel/某公司贸易数据（northwind）.xlsx") 
        sheetnames = workbook_.get_sheet_names()  # 获得所有表单名字 
        print(sheetnames) 
        sheet = workbook_.get_sheet_by_name()#获取其中一张表单 
        print(sheet.cell(row=3, column=3).value) 
        sheet['A1'] = '47' 
        workbook_.save("./excel/northwind_new.xlsx")
        #创建一张表
        workbook_ = load_workbook('./某公司贸易数据.xlsx)
        sheet1 = workbook_.creat_sheet(index = 7,title = 'now sheet')#index是增加的位置,title是表名
        sheet1['A1'] = 'hello'
        sheet2['A2'] = 'world'
6.os模块

  #导入
  import os

  #路径
  os.getcwd()           #查看当前所在路径
  os.listdir(path)      #列举目录下的所有文件。返回的是列表类型
  os.path.abspath(path) #返回path的绝对路径
  os.path.split(path)   #将路径分解为(文件夹,文件名)，返回的是元组类型
  os.path.dirname(path) #返回path中的文件夹部分，结果不包含'\'
  os.path.basename(path)#返回path中的文件名
  
  #大小、是否存在
  os.path.getsize(path) #文件或文件夹的大小，若是文件夹返回0
  os.path.exists(path)  #文件或文件夹是否存在，返回True 或 False

  #操作日志
  os.path.getmtime(path) #文件或文件夹的最后修改时间，从新纪元到访问时的秒数
  os.path.getatime(path) #文件或文件夹的最后访问时间，从新纪元到访问时的秒数
  os.path.getctime(path) #文件或文件夹的创建时间，从新纪元到访问时的秒数

  #一些表现形式参数
  os.sep                 #'\\'
  os.extsep              #'.'
  os.pathsep             #';'
  os.linesep             #'\r\n'

  实例：查找文件夹下最新的文件
  import os
  def new_file(test_dir):
      #列举test_dir目录下的所有文件（名），结果以列表形式返回。
      lists=os.listdir(test_dir)
      #sort按key的关键字进行升序排序，lambda的入参fn为lists列表的元素，获取文件的最后修改时间，所以最终以文件时间从小到大排序
      #最后对lists元素，按文件修改时间大小从小到大排序。
      lists.sort(key=lambda fn:os.path.getmtime(test_dir+'\\'+fn))
      #获取最新文件的绝对路径，列表中最后一个值,文件夹+文件名
      file_path=os.path.join(test_dir,lists[-1])
      return file_path

  #返回D:\pythontest\ostest下面最新的文件
  print new_file('D:\\system files\\workspace\\selenium\\email126pro\\email126\\report')